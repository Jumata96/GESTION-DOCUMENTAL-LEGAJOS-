<?php
bolt_decrypt( __FILE__ , '7Yc4Xc'); return 0;
##!!!##